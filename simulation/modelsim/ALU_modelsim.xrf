vendor_name = ModelSim
source_file = 1, C:/intelFPGA_lite/18.1/ALU/ALU.out.sdc
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_ALU.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/ALU_N.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/IS_ZERO.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_SHIFT_RIGHT.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_SHIFT_LEFT.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/SHIFT_RIGHT.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/SHIFT_LEFT.sv
source_file = 1, SUBTRACTOR.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_GATE_XOR.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_GATE_OR.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_GATE_NOT.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/GATE_XOR.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/GATE_OR.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/GATE_NOT.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/GATE_AND.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/ALU.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_GATE_AND.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/ADDER_HALF.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/ADDER_FULL.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_ADDER_FULL.sv
source_file = 1, testbench_SUBTRACTOR.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/GATE_NAND.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/MUX.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_MUX.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/testbench_IS_ZERO.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/db/ALU.cbx.xml
design_name = ALU
instance = comp, \LEDR[0]~output , LEDR[0]~output, ALU, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, ALU, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, ALU, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, ALU, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, ALU, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, ALU, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, ALU, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, ALU, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, ALU, 1
instance = comp, \LEDR[9]~output , LEDR[9]~output, ALU, 1
instance = comp, \SW[7]~input , SW[7]~input, ALU, 1
instance = comp, \SW[4]~input , SW[4]~input, ALU, 1
instance = comp, \SW[5]~input , SW[5]~input, ALU, 1
instance = comp, \SW[9]~input , SW[9]~input, ALU, 1
instance = comp, \SW[8]~input , SW[8]~input, ALU, 1
instance = comp, \SW[6]~input , SW[6]~input, ALU, 1
instance = comp, \ALU_FPGA|Mux5~2 , ALU_FPGA|Mux5~2, ALU, 1
instance = comp, \SW[3]~input , SW[3]~input, ALU, 1
instance = comp, \SW[1]~input , SW[1]~input, ALU, 1
instance = comp, \SW[2]~input , SW[2]~input, ALU, 1
instance = comp, \ALU_FPGA|Mux5~1 , ALU_FPGA|Mux5~1, ALU, 1
instance = comp, \SW[0]~input , SW[0]~input, ALU, 1
instance = comp, \ALU_FPGA|Mux4~1 , ALU_FPGA|Mux4~1, ALU, 1
instance = comp, \ALU_FPGA|Mux5~3 , ALU_FPGA|Mux5~3, ALU, 1
instance = comp, \ALU_FPGA|Mux5~4 , ALU_FPGA|Mux5~4, ALU, 1
instance = comp, \ALU_FPGA|ALU_ADDER_FULL|generate_full_adder[2].f|OP1|OUT[0] , ALU_FPGA|ALU_ADDER_FULL|generate_full_adder[2].f|OP1|OUT[0], ALU, 1
instance = comp, \ALU_FPGA|Mux5~0 , ALU_FPGA|Mux5~0, ALU, 1
instance = comp, \ALU_FPGA|Mux4~0 , ALU_FPGA|Mux4~0, ALU, 1
instance = comp, \ALU_FPGA|Mux5~5 , ALU_FPGA|Mux5~5, ALU, 1
instance = comp, \ALU_FPGA|ALU_ADDER_FULL|generate_full_adder[1].f|OP5|OUT[0] , ALU_FPGA|ALU_ADDER_FULL|generate_full_adder[1].f|OP5|OUT[0], ALU, 1
instance = comp, \ALU_FPGA|SUBTRACTION|generate_full_adder[1].f|OP5|OUT[0] , ALU_FPGA|SUBTRACTION|generate_full_adder[1].f|OP5|OUT[0], ALU, 1
instance = comp, \ALU_FPGA|SHIFTING_LEFT|generate_shift_right[0].generate_muxes_sl[2].f|OR|OUT[0]~0 , ALU_FPGA|SHIFTING_LEFT|generate_shift_right[0].generate_muxes_sl[2].f|OR|OUT[0]~0, ALU, 1
instance = comp, \ALU_FPGA|Mux4~2 , ALU_FPGA|Mux4~2, ALU, 1
instance = comp, \ALU_FPGA|Mux4~3 , ALU_FPGA|Mux4~3, ALU, 1
instance = comp, \ALU_FPGA|SUBTRACTION|OVERFLOW~0 , ALU_FPGA|SUBTRACTION|OVERFLOW~0, ALU, 1
instance = comp, \ALU_FPGA|SHIFTING_LEFT|OVERFLOW , ALU_FPGA|SHIFTING_LEFT|OVERFLOW, ALU, 1
instance = comp, \ALU_FPGA|ALU_ADDER_FULL|OVERFLOW , ALU_FPGA|ALU_ADDER_FULL|OVERFLOW, ALU, 1
instance = comp, \ALU_FPGA|Mux3~0 , ALU_FPGA|Mux3~0, ALU, 1
instance = comp, \ALU_FPGA|FLAG_CARRY~0 , ALU_FPGA|FLAG_CARRY~0, ALU, 1
instance = comp, \ALU_FPGA|Mux2~2 , ALU_FPGA|Mux2~2, ALU, 1
instance = comp, \ALU_FPGA|SHIFTING_RIGHT_ARITHMETIC|generate_shift_right[0].generate_muxes_sr[1].f|OR|OUT[0]~0 , ALU_FPGA|SHIFTING_RIGHT_ARITHMETIC|generate_shift_right[0].generate_muxes_sr[1].f|OR|OUT[0]~0, ALU, 1
instance = comp, \ALU_FPGA|Mux2~0 , ALU_FPGA|Mux2~0, ALU, 1
instance = comp, \ALU_FPGA|Mux2~1 , ALU_FPGA|Mux2~1, ALU, 1
instance = comp, \ALU_FPGA|Mux1~1 , ALU_FPGA|Mux1~1, ALU, 1
instance = comp, \ALU_FPGA|SHIFTING_LEFT|generate_shift_right[0].generate_muxes_sl[1].f|OR|OUT[0]~0 , ALU_FPGA|SHIFTING_LEFT|generate_shift_right[0].generate_muxes_sl[1].f|OR|OUT[0]~0, ALU, 1
instance = comp, \ALU_FPGA|Mux1~2 , ALU_FPGA|Mux1~2, ALU, 1
instance = comp, \ALU_FPGA|Mux1~0 , ALU_FPGA|Mux1~0, ALU, 1
instance = comp, \ALU_FPGA|Mux1~3 , ALU_FPGA|Mux1~3, ALU, 1
instance = comp, \ALU_FPGA|Mux0~0 , ALU_FPGA|Mux0~0, ALU, 1
instance = comp, \ALU_FPGA|Mux0~1 , ALU_FPGA|Mux0~1, ALU, 1
instance = comp, \ALU_FPGA|Mux4~4 , ALU_FPGA|Mux4~4, ALU, 1
instance = comp, \ALU_FPGA|Mux0~2 , ALU_FPGA|Mux0~2, ALU, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, ALU, 1
